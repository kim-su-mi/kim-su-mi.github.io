/* .left-section{
    height: 100%;
    width: 50%;
    border-right: 1px solid rgb(201, 201, 201);
}
.right-section{
    height: 100%;
    width: 50%;
}
.left-section, .right-section{
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
}
.detail-page img{
    width: 100%;
    height: 100%;
    opacity: 0.7;
}
.detail-page h1{
    position: absolute;
    font-size: 50px;
}
.incorrect::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 0, 0, 0.5); /* 빨간 투명 막의 색상과 투명도 설정 
    opacity: 0; /* 초기에는 투명하게 설정 
    transition: opacity 0.3s ease; /* 호버 효과에 적용할 트랜지션 
}

.right-section:hover .incorrect::before {
    opacity: 1; /* 호버 시 투명 막이 나타나도록 설정 
} 
*/

.post1,.post2,.post3,.post4,.post5 {
    display: flex;
    width: 100%; 
    position: relative;
}

 .correct,
 .incorrect {
    flex: 1; /* 클래스들이 각각 동일한 너비를 가지도록 함 */
    max-width: 50%; 
    box-sizing: border-box; /* 패딩과 테두리를 포함하여 너비를 계산*/
}

.correct img,
.incorrect img {
    width: 100%; 
    height: 100%; 
}
.explain-text{
    margin: auto;
    text-align: center; 
    max-width: 100%; 
    font-weight: bold;
    font-size: 30px;
}
.text {
    position: absolute; 
    top: 50%; /* 상단에서 50% 떨어진 위치로 설정 */
    left: 50%; /* 왼쪽에서 50% 떨어진 위치로 설정 */
    transform: translate(-50%, -50%); /* 요소의 중심을 기준으로 상단과 왼쪽으로 50%만큼 이동시킴 */
    text-align: center; 
    max-width: 100%; 
    font-weight: bold;
    font-size: 50px;
}

.correct {
    position: relative; /* 부모 요소로부터 상대적 위치 지정 */
}

.correct::before {
    content: ""; /* 가상 요소를 생성하기 위해 content 속성 사용 */
    position: absolute; 
    top: 0; 
    left: 0; 
    width: 100%; 
    height: 100%; 
    background-color: rgba(0, 255, 0, 0.5); 
    opacity: 0; /* 처음에 투명하게 설정 */
    transition: opacity 0.3s ease; /* 변화를 부드럽게 만드는 효과 */
}

.correct:hover::before {
    opacity: 1; /* 호버 시에만 초록색 막을 나타나게 함 */
}

.incorrect {
    position: relative; /* 부모 요소로부터 상대적 위치 지정 */
}

.incorrect::before {
    content: ""; /* 가상 요소를 생성하기 위해 content 속성 사용 */
    position: absolute; 
    top: 0; 
    left: 0; 
    width: 100%; 
    height: 100%; 
    background-color: rgba(255, 0, 0, 0.5); 
    opacity: 0; /* 처음에 투명하게 설정 */
    transition: opacity 0.3s ease; /* 변화를 부드럽게 만드는 효과 */
}

.incorrect:hover::before {
    opacity: 1; /* 호버 시에만 빨간색 막을 나타나게 함 */
}

